{"version":3,"sources":["App.module.scss","components/Slider.module.scss","components/Dialog.module.scss","components/Toast.module.scss","screens/ScreenStart.module.scss","components/Explosion.module.scss","screens/ScreenTimer.module.scss","components/ProgressBar.module.scss","screens/ScreenLoading.module.scss","components/Slider.tsx","logo.svg","utils/storageUtils.ts","screens/ScreenStart.tsx","components/Explosion.tsx","screens/ScreenTimer.tsx","logo192.png","components/ProgressBar.tsx","components/Dialog.tsx","components/Toast.tsx","serviceWorkerRegistration.ts","screens/ScreenLoading.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Slider","props","useState","style","setStyle","useEffect","newValue","value","min","max","input","background","output","left","setProgressStyles","className","styles","masterContainer","titleContainer","title","sliderContainer","sliderWrapper","type","onChange","e","callback","currentTarget","valueAsNumber","slider","bubble","storageAvailable","storage","localStorage","x","setItem","removeItem","getItem","key","DOMException","code","name","length","clearAllData","Object","keys","forEach","ScreenStart","useRecoilState","focusValueState","focusValue","setFocusValue","shortBreakValueState","shortBreakValue","setShortBreakValue","longBreakValueState","longBreakValue","setLongBreakValue","parseSetting","setting","defaultSetting","parseInt","window","Notification","requestPermission","src","logo","subtext","settingsContainer","Explosion","particles","i","push","particle","TimerTypes","interval","ProgressBar","container","Array","map","item","index","stage","active","ScreenTimer","timeSeconds","FOCUS","timerType","setTimerType","focusLength","time","setTime","showExplosion","setShowExplosion","sessionsCompleted","setSessionsCompleted","startTime","Date","now","firstUpdate","useRef","current","run","permission","body","SHORTBREAK","LONGBREAK","options","icon","logopng","badge","tag","renotify","result","navigator","serviceWorker","ready","then","registration","showNotification","shortBreakLength","longBreakLength","setInterval","timeLeft","Math","floor","pauseCallback","ceil","tickTimer","clearInterval","timeout","setTimeout","clearTimeout","getTimerTypeString","getNextTypeString","Dialog","exitAnimationClass","setExitAnimationClass","entryAnimationClass","setEntryAnimationClass","entryTimeout","entryAnimation","wrapper","onClick","exitAnimation","confirmCallback","confirmText","Toast","message","isLocalhost","Boolean","location","hostname","match","register","config","URL","process","href","origin","addEventListener","swUrl","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ScreenLoading","showUpdate","setShowUpdate","showSuccess","setShowSuccess","showLoading","setShowLoading","onSWUpdate","waiting","onSWSuccess","serviceWorkerRegistration","postMessage","loadingContainer","atom","default","App","useRecoilValue","activated","setActivated","ripple","setRipple","_handlePause","paused","rippleActivated","rippleTimer","topContainer","screensContainer","screenWrapper","start","timer","btnContainer","toString","btn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ed650e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"masterContainer\":\"App_masterContainer__bV1Ua\",\"topContainer\":\"App_topContainer__39NIn\",\"screensContainer\":\"App_screensContainer__1qnsY\",\"screenWrapper\":\"App_screenWrapper__3afb4\",\"start\":\"App_start__1dptW\",\"activated\":\"App_activated__UxgSK\",\"paused\":\"App_paused__28fF9\",\"timer\":\"App_timer__3NkLz\",\"btnContainer\":\"App_btnContainer__1LoXn\",\"btn\":\"App_btn__27zR5\",\"icon\":\"App_icon__iT7DN\",\"ripple\":\"App_ripple__gn1Pp\",\"rippleActivated\":\"App_rippleActivated__3KZOv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"masterContainer\":\"Slider_masterContainer__1ramN\",\"titleContainer\":\"Slider_titleContainer__rRMHn\",\"sliderContainer\":\"Slider_sliderContainer__1IR6k\",\"sliderWrapper\":\"Slider_sliderWrapper__i06_t\",\"bubble\":\"Slider_bubble__11eyu\",\"slider\":\"Slider_slider__-HRXv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"masterContainer\":\"Dialog_masterContainer__MifDc\",\"entryAnimation\":\"Dialog_entryAnimation__15-fd\",\"exitAnimation\":\"Dialog_exitAnimation__1ofuF\",\"wrapper\":\"Dialog_wrapper__3NCXm\",\"btnWrapper\":\"Dialog_btnWrapper__35PkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"masterContainer\":\"Toast_masterContainer__2DgpP\",\"entryAnimation\":\"Toast_entryAnimation__3q2EA\",\"exitAnimation\":\"Toast_exitAnimation__vkA_R\",\"wrapper\":\"Toast_wrapper__tlGPw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"masterContainer\":\"ScreenStart_masterContainer__20YAs\",\"subtext\":\"ScreenStart_subtext__3RXcf\",\"settingsContainer\":\"ScreenStart_settingsContainer__20euN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"masterContainer\":\"Explosion_masterContainer__3UuLo\",\"particle\":\"Explosion_particle__2SK2I\",\"shoot\":\"Explosion_shoot__6Cro8\",\"fade\":\"Explosion_fade__2hquw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"masterContainer\":\"ScreenTimer_masterContainer__aEh1X\",\"ready\":\"ScreenTimer_ready__1vksG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProgressBar_container__1gsd7\",\"active\":\"ProgressBar_active__19j73\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"masterContainer\":\"ScreenLoading_masterContainer__3jQRt\",\"loadingContainer\":\"ScreenLoading_loadingContainer__XaNOz\"};","import React, { ChangeEvent, CSSProperties, useEffect, useState } from \"react\"\r\nimport styles from \"./Slider.module.scss\"\r\n\r\ninterface Props {\r\n  callback: (value: number) => void\r\n  title: string\r\n  value: number\r\n  max: number\r\n  min: number\r\n}\r\n\r\ninterface CSSStyles {\r\n  input: CSSProperties\r\n  output: CSSProperties\r\n}\r\n\r\nexport default function Slider(props: Props) {\r\n\r\n  const [style, setStyle] = useState<CSSStyles>()\r\n  \r\n  useEffect(() => {\r\n    setProgressStyles()\r\n  }, [props.value])\r\n\r\n  function handleChange(e: ChangeEvent<HTMLInputElement>) {\r\n    props.callback(e.currentTarget.valueAsNumber)\r\n  }\r\n  function setProgressStyles() {\r\n    const newValue = (props.value - props.min) * 100 / (props.max - props.min)\r\n    setStyle({\r\n      input: {background: `linear-gradient(to right, var(--color-accent), var(--color-accent) ${(props.value-props.min)/(props.max-props.min)*100}%, rgba(var(--color-accent-rgb), 0.5) ${(props.value-props.min)/(props.max-props.min)*100}%,rgba(var(--color-accent-rgb), 0.5) 100%)`},\r\n      output: {left: `calc(${newValue}% + (${14 - newValue * 0.28}px))`}\r\n    })\r\n  }\r\n  return (\r\n    <div className={styles.masterContainer}>\r\n      <div className={styles.titleContainer}>\r\n        <p>{props.title}</p>\r\n        <p>{props.value + \" min\"}</p>\r\n      </div>\r\n      \r\n      <div className={styles.sliderContainer}>\r\n        <div className={styles.sliderWrapper}>\r\n          <input style={style?.input} type=\"range\" min={props.min} max={props.max} value={props.value} onChange={handleChange} className={styles.slider}/>\r\n          <output style={style?.output} className={styles.bubble}>{props.value}</output>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.0d54834f.svg\";","function storageAvailable(): boolean {\r\n  let storage\r\n  try {\r\n    storage = localStorage\r\n    const x = \"__storage_test__\"\r\n    storage.setItem(x, x)\r\n    storage.removeItem(x)\r\n    return true\r\n  }\r\n  catch(e) {\r\n    return false\r\n  }\r\n}\r\n\r\nexport function deleteItem(key: string) {\r\n  if(!storageAvailable) return false\r\n  localStorage.removeItem(key)\r\n}\r\n\r\nexport function getItem(key: string): string | null {\r\n  if(!storageAvailable) return null\r\n  try {\r\n    return localStorage.getItem(key)\r\n  } catch {\r\n    return null\r\n  }\r\n}\r\n\r\nexport function setItem(key: string, value: string): boolean {\r\n  if(!storageAvailable) return false\r\n  while(true) {\r\n    try {\r\n      localStorage.setItem(key, value)\r\n      return true\r\n    } catch (e) {\r\n      if (e instanceof DOMException && (\r\n        // Everything except Firefox\r\n        e.code === 22 ||\r\n        // Firefox\r\n        e.code === 1014 ||\r\n        // test name field too, because code might not be present\r\n        // everything except Firefox\r\n        e.name === \"QuotaExceededError\" ||\r\n        // Firefox\r\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\r\n        // acknowledge QuotaExceededError only if there's something already stored\r\n        (localStorage && localStorage.length !== 0)) {\r\n        // Full storage, clear all data and try again\r\n        clearAllData()\r\n      } else {\r\n        // Other error\r\n        break\r\n      }\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function clearAllData() {\r\n  if(!storageAvailable) return\r\n  Object.keys(localStorage).forEach(function(key){\r\n    localStorage.removeItem(key)\r\n  })\r\n}","import React, { useEffect } from \"react\"\r\nimport styles from \"./ScreenStart.module.scss\"\r\nimport Slider from \"../components/Slider\"\r\nimport logo from \"../logo.svg\"\r\nimport {getItem} from \"../utils/storageUtils\"\r\nimport { useRecoilState } from \"recoil\"\r\nimport { focusValueState, shortBreakValueState, longBreakValueState } from \"../App\"\r\n\r\nexport default function ScreenStart() {\r\n  const [focusValue, setFocusValue] = useRecoilState(focusValueState)\r\n  const [shortBreakValue, setShortBreakValue] = useRecoilState(shortBreakValueState)\r\n  const [longBreakValue, setLongBreakValue] = useRecoilState(longBreakValueState)\r\n\r\n  useEffect(() => {\r\n    applyInitialSettingsValues()\r\n    requestNotifications()\r\n  }, [])\r\n\r\n  function requestNotifications() {\r\n    if (window.Notification) {\r\n      Notification.requestPermission()\r\n    }\r\n  }\r\n  function applyInitialSettingsValues() {\r\n    setFocusValue(parseSetting(getItem(\"focusLength\"), 25))\r\n    setShortBreakValue(parseSetting(getItem(\"shortBreakLength\"), 5))\r\n    setLongBreakValue(parseSetting(getItem(\"longBreakLength\"), 15))\r\n  }\r\n  \r\n  function parseSetting(setting: string | null, defaultSetting: number): number {\r\n    if (setting != null && parseInt(setting)) {\r\n      return parseInt(setting)\r\n    } else {\r\n      return defaultSetting\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.masterContainer}>\r\n      <img src={logo}/>\r\n      <h2>Avodoro</h2>\r\n      <p className={styles.subtext}>Optimize the focus-break balance to your needs</p>\r\n      <div className={styles.settingsContainer}>\r\n        <Slider title=\"Focus\" value={focusValue} min={1} max={60} callback={setFocusValue}/>\r\n        <Slider title=\"Short break\" value={shortBreakValue} min={1} max={60} callback={setShortBreakValue}/>\r\n        <Slider title=\"Long break\" value={longBreakValue} min={1} max={60} callback={setLongBreakValue}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { ReactElement, useEffect, useState } from \"react\"\r\nimport styles from \"./Explosion.module.scss\"\r\nimport logo from \"../logo.svg\"\r\n\r\nexport default function Explosion() {\r\n\r\n  const particles: Array<ReactElement> = []\r\n\r\n  for (let i = 0; i < 20; i++) {\r\n    particles.push(<img key={i} src={logo} className={styles.particle}/>)\r\n  }\r\n  \r\n  return (\r\n    <div className={styles.masterContainer}>\r\n      {particles}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport Explosion from \"../components/Explosion\"\r\nimport styles from \"./ScreenTimer.module.scss\"\r\nimport logopng from \"../logo192.png\"\r\nimport ProgressBar from \"../components/ProgressBar\"\r\n\r\nenum TimerTypes {\r\n  FOCUS,\r\n  SHORTBREAK,\r\n  LONGBREAK\r\n}\r\n\r\ninterface Props {\r\n  focusLength: number\r\n  shortBreakLength: number\r\n  longBreakLength: number\r\n  run: boolean\r\n  pauseCallback: () => void\r\n}\r\n\r\nlet interval: NodeJS.Timer\r\n\r\nexport default function ScreenTimer(props: Props) {\r\n  const [timerType, setTimerType] = useState(TimerTypes.FOCUS)\r\n  const [time, setTime] = useState(props.focusLength)\r\n  const [showExplosion, setShowExplosion] = useState(false)\r\n  const [sessionsCompleted, setSessionsCompleted] = useState(0)\r\n\r\n  const startTime = Date.now()\r\n  const firstUpdate = useRef(true)\r\n\r\n  let timeSeconds: number\r\n\r\n  useEffect(() => {\r\n    // Detects if this is the first render\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false\r\n      return\r\n    }\r\n    // Should not run on initial render to avoid notification spam\r\n    if (!props.run && window.Notification && Notification.permission === \"granted\") {\r\n      showNotification()\r\n    }\r\n  }, [props.run])\r\n\r\n  useEffect(() => {\r\n    switch(timerType) {\r\n    case TimerTypes.FOCUS:\r\n      setTime(props.focusLength)\r\n      timeSeconds = props.focusLength * 60\r\n      break\r\n    case TimerTypes.SHORTBREAK:\r\n      setTime(props.shortBreakLength)\r\n      timeSeconds = props.shortBreakLength * 60\r\n      break\r\n    case TimerTypes.LONGBREAK:\r\n      setTime(props.longBreakLength)\r\n      timeSeconds = props.longBreakLength * 60\r\n      break\r\n    }\r\n  }, [timerType, props.run])\r\n\r\n  useEffect(() => {\r\n    if (props.run) {\r\n      interval = setInterval(() => {\r\n        tickTimer()\r\n      }, 1000)\r\n      setShowExplosion(true)\r\n    } else {\r\n      clearInterval(interval)\r\n    }\r\n    // Cleanup function\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [timerType, props.run])\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setShowExplosion(false)\r\n    }, 2000)\r\n    return (() => {\r\n      clearTimeout(timeout)\r\n    })\r\n  }, [showExplosion])\r\n\r\n  function showNotification() {\r\n    let title: string\r\n    let body: string\r\n\r\n    switch(timerType) {\r\n    case TimerTypes.FOCUS:\r\n      title = \"Next: Focus\"\r\n      body = \"Ready to focus?\"\r\n      break\r\n    case TimerTypes.SHORTBREAK:\r\n      title = \"Next: Short break\"\r\n      body = \"Ready for a short break?\"\r\n      break\r\n    case TimerTypes.LONGBREAK:\r\n      title = \"Next: Long break\"\r\n      body = \"Ready for a longer break?\"\r\n      break\r\n    default:\r\n      title = \"Next: Focus\"\r\n      body = \"Ready to focus?\"\r\n      break\r\n    }\r\n    const options = {\r\n      body,\r\n      icon: logopng,\r\n      badge: logopng,\r\n      tag: \"session\",\r\n      renotify: true\r\n    }\r\n    Notification.requestPermission(function(result) {\r\n      if (result === \"granted\") {\r\n        navigator.serviceWorker.ready.then(function(registration) {\r\n          registration?.showNotification(title, options)\r\n        })\r\n      }\r\n    })\r\n  }\r\n  function tickTimer() {\r\n    const timeLeft = timeSeconds - Math.floor((Date.now() - startTime)/1000)\r\n    if (timeLeft <= 0) {\r\n      switch(timerType) {\r\n      case TimerTypes.FOCUS:\r\n        if (sessionsCompleted !== 3) {\r\n          setTimerType(TimerTypes.SHORTBREAK)\r\n        } else {\r\n          setTimerType(TimerTypes.LONGBREAK)\r\n        }\r\n        break\r\n      case TimerTypes.SHORTBREAK:\r\n        setSessionsCompleted(sessionsCompleted + 1)\r\n        setTimerType(TimerTypes.FOCUS)\r\n        break\r\n      case TimerTypes.LONGBREAK:\r\n        setSessionsCompleted(0)\r\n        setTimerType(TimerTypes.FOCUS)\r\n        break\r\n      }\r\n      props.pauseCallback()\r\n    } else if (Math.ceil(timeLeft / 60) !== time) {\r\n      setTime(Math.ceil(timeLeft / 60))\r\n    }\r\n  }\r\n\r\n  function getTimerTypeString(): string {\r\n    switch(timerType) {\r\n    case TimerTypes.FOCUS:\r\n      return \"Keep focusing\"\r\n    case TimerTypes.SHORTBREAK:\r\n      return \"Relax for a bit\"\r\n    case TimerTypes.LONGBREAK:\r\n      return \"Relax a bit longer\"\r\n    }\r\n  }\r\n\r\n  function getNextTypeString(): string {\r\n    switch(timerType) {\r\n    case TimerTypes.FOCUS:\r\n      return \"Focus\"\r\n    case TimerTypes.SHORTBREAK:\r\n      return \"Short break\"\r\n    case TimerTypes.LONGBREAK:\r\n      return \"Long break\"\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={styles.masterContainer}>\r\n      {props.run ?\r\n        <>\r\n          <h2>{getTimerTypeString()}</h2>\r\n          <h1>{time}</h1>\r\n          <p>{time > 1 ? \"minutes remaining\" : \"minute remaining\"}</p>\r\n        </>\r\n        : \r\n        <>\r\n          <h2>Next up: {getNextTypeString()}</h2>\r\n          <p className={styles.ready}>Ready?</p>\r\n        </>\r\n      }\r\n      <ProgressBar stage={sessionsCompleted + 1}/>\r\n      {showExplosion && <Explosion /> }\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo192.78d9984f.png\";","import React, { useState } from \"react\"\r\nimport styles from \"./ProgressBar.module.scss\"\r\n\r\ninterface Props {\r\n  stage: number\r\n}\r\nexport default function ProgressBar(props: Props) {\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {[...Array(4)].map((item, index) => {\r\n        const name = (index < props.stage) ? styles.active : \"\"\r\n        return <div key={index} className={name} />\r\n      }\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport styles from \"./Dialog.module.scss\"\r\n\r\ninterface Props {\r\n  confirmCallback: () => void\r\n  confirmText: string\r\n  title: string\r\n  body: string\r\n}\r\nexport default function Dialog(props: Props) {\r\n  const [exitAnimationClass, setExitAnimationClass] = useState(\"\")\r\n  const [entryAnimationClass, setEntryAnimationClass] = useState(\"\")\r\n  \r\n  useEffect(() => {\r\n    const entryTimeout = setTimeout(() => {\r\n      setEntryAnimationClass(styles.entryAnimation)\r\n    }, 10)\r\n    return (() => {\r\n      clearTimeout(entryTimeout)\r\n    })\r\n  }, [])\r\n  function close() {\r\n    setExitAnimationClass(styles.exitAnimation)\r\n    setTimeout(() => {\r\n      props.confirmCallback()\r\n    }, 200)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.masterContainer + \" \" + entryAnimationClass + \" \" + exitAnimationClass}>\r\n      <div className={styles.wrapper}>\r\n        <h2>{props.title}</h2>\r\n        <p>{props.body}</p>\r\n        <button onClick={close}>{props.confirmText}</button>  \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport styles from \"./Toast.module.scss\"\r\n\r\ninterface Props {\r\n  message: string\r\n  callback: () => void\r\n}\r\nexport default function Toast(props: Props) {\r\n\r\n  const [exitAnimationClass, setExitAnimationClass] = useState(\"\")\r\n  const [entryAnimationClass, setEntryAnimationClass] = useState(\"\")\r\n  \r\n  useEffect(() => {\r\n    const entryTimeout = setTimeout(() => {\r\n      setEntryAnimationClass(styles.entryAnimation)\r\n    }, 10)\r\n    return (() => {\r\n      clearTimeout(entryTimeout)\r\n    })\r\n  }, [])\r\n  function close() {\r\n    setExitAnimationClass(styles.exitAnimation)\r\n    setTimeout(() => {\r\n      props.callback()\r\n    }, 200)\r\n  }\r\n  \r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.masterContainer + \" \" + entryAnimationClass + \" \" + exitAnimationClass}>\r\n        <p>{props.message}</p>\r\n        <button onClick={close}>✖</button>  \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://cra.link/PWA\"\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\")\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\")\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection found. App is running in offline mode.\")\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister()\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Dialog from \"../components/Dialog\"\r\nimport Toast from \"../components/Toast\"\r\nimport * as serviceWorkerRegistration from \"../serviceWorkerRegistration\"\r\nimport styles from \"./ScreenLoading.module.scss\"\r\n\r\nlet serviceWorker: ServiceWorker | null\r\nexport default function ScreenLoading() {\r\n  const [showUpdate, setShowUpdate] = useState(false)\r\n  const [showSuccess, setShowSuccess] = useState(false)\r\n  const [showLoading, setShowLoading] = useState(false)\r\n  \r\n  function onSWUpdate(registration: ServiceWorkerRegistration) {\r\n    setShowUpdate(true)\r\n    serviceWorker = registration.waiting\r\n  }\r\n\r\n  function onSWSuccess() {\r\n    setShowSuccess(true)\r\n  }\r\n\r\n  function updateSW() {\r\n    setShowLoading(true)\r\n    if (!serviceWorker) return\r\n    // Add listener for state change of service worker\r\n    serviceWorker.onstatechange = () => {\r\n      if (serviceWorker?.state === \"activated\" &&\r\n          navigator.serviceWorker.controller) {\r\n        // Reload page if waiting was successfully skipped\r\n        window.location.reload()\r\n      }\r\n    }\r\n    serviceWorker.postMessage({ type: \"SKIP_WAITING\" })\r\n    setShowUpdate(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    serviceWorkerRegistration.register({onUpdate: onSWUpdate, onSuccess: onSWSuccess})\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.masterContainer}>\r\n      {showSuccess &&\r\n        <Toast message=\"Content cached, this app works offline!\" callback={() => setShowSuccess(false)} />\r\n      }\r\n      {showUpdate && \r\n        <Dialog title=\"Update available\" body=\"Please update the app.\"\r\n          confirmText=\"Update\" confirmCallback={updateSW} />\r\n      }\r\n      {showLoading &&\r\n        <div className={styles.loadingContainer}>\r\n          <h2>Updating...</h2>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport ScreenStart from \"./screens/ScreenStart\"\r\nimport styles from \"./App.module.scss\"\r\nimport { atom, useRecoilValue } from \"recoil\"\r\nimport { setItem } from \"./utils/storageUtils\"\r\nimport ScreenTimer from \"./screens/ScreenTimer\"\r\nimport ScreenLoading from \"./screens/ScreenLoading\"\r\n\r\nexport const focusValueState = atom({\r\n  key: \"focusValueState\",\r\n  default: 25\r\n})\r\nexport const shortBreakValueState = atom({\r\n  key: \"shortBreakValueState\", \r\n  default: 5\r\n})\r\nexport const longBreakValueState = atom({\r\n  key: \"longBreakValueState\",\r\n  default: 15\r\n})\r\n\r\nexport default function App() {\r\n\r\n  const focusValue = useRecoilValue(focusValueState)\r\n  const shortBreakValue = useRecoilValue(shortBreakValueState)\r\n  const longBreakValue = useRecoilValue(longBreakValueState)\r\n\r\n  const [activated, setActivated] = useState(\"deactivated\")\r\n  const [ripple, setRipple] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    if (ripple.length > 0) {\r\n      const rippleTimer = setTimeout(function(){\r\n        setRipple(\"\")\r\n      }, 400)\r\n      return () => {\r\n        clearTimeout(rippleTimer)\r\n      }\r\n    }\r\n  }, [ripple])\r\n\r\n  function _handleButtonPress() {\r\n    switch(activated) {\r\n    case \"deactivated\":\r\n    case styles.activated:\r\n      toggleSession()\r\n      break\r\n    case styles.paused:\r\n      _handlePause()\r\n    }\r\n    \r\n  }\r\n\r\n  function toggleSession() {\r\n    activated === styles.activated ? setActivated(\"deactivated\") : setActivated(styles.activated)\r\n    setRipple(styles.rippleActivated)\r\n    setItem(\"focusLength\", focusValue.toString())\r\n    setItem(\"shortBreakLength\", shortBreakValue.toString())\r\n    setItem(\"longBreakLength\", longBreakValue.toString())\r\n  }\r\n\r\n  function _handlePause() {\r\n    activated === styles.activated ? setActivated(styles.paused) : setActivated(styles.activated)\r\n    setRipple(styles.rippleActivated)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.masterContainer}>\r\n      <ScreenLoading/>\r\n      <div className={styles.topContainer}/>\r\n      <div className={styles.screensContainer}>\r\n        <div className={styles.screenWrapper + \" \" + styles.start + \" \" + activated}>\r\n          <ScreenStart/>\r\n        </div>\r\n        <div className={styles.screenWrapper + \" \" + styles.timer + \" \" + activated}>\r\n          { (activated === styles.activated || activated === styles.paused) &&\r\n            <ScreenTimer focusLength={focusValue} shortBreakLength={shortBreakValue} longBreakLength={longBreakValue} run={activated === styles.activated ? true : false} pauseCallback={_handlePause}/>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div className={styles.btnContainer}>\r\n        <button onClick={_handleButtonPress} className={styles.btn + \" \" + activated}>\r\n          <div className={styles.icon + \" \" + activated}/>\r\n          <div className={styles.ripple + \" \" + ripple + \" \" + activated}/>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { ReportHandler } from \"web-vitals\"\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.scss\"\r\nimport App from \"./App\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\nimport { RecoilRoot } from \"recoil\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <App />\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}